{
  
    
        "post0": {
            "title": "Title",
            "content": "item source authors licence . Data on COVID-19 vaccinations shared by Our World in Data | link | link | link | .",
            "url": "https://creaitive.studio/2021/03/18/copyrights.html",
            "relUrl": "/2021/03/18/copyrights.html",
            "date": " • Mar 18, 2021"
        }
        
    
  
    
        ,"post1": {
            "title": "SQL is fun!",
            "content": "SQL in action . TODO: use case demo + some intro . Building your first end-to-end project . Now that you saw an example of data project using SQL, you&#39;ll see how to build such project yourself. . Download the data . You can&#39;t do analytics without data. How you actually get it, depends on your project. When working on a business project, you may find the crucial datasets in a database of your company. That&#39;s quite convenient as you don&#39;t have to prepare and upload the data yourself. . Eventually you may stumble upon a limitations of the data at your disposal. Or you may want to work on your personal project, where you need to create your dataset from scratch. In such cases, ability to explore and use publically available datasets can be a very useful skill. There&#39;s no golden rule, but you might want to check sites like Kaggle, this repo, Dataset Search by Google or this subreddit looking for the right data for you. . In our example, we&#39;ll use the data on COVID-19 vaccinations shared by Our World in Data. You can find it in this repo. To download the data, follow the steps: . visit this link, | click on the little Raw button in the upper right corner, | when you see a comma delimited text right-click on top of it and select Save as.. option to save the file on your computer. TODO: screnshoots to bullets above? | . Congratulations, you&#39;ve just completed the first step to get your data project up and running! . Install the database . TODO: Blue Pill or Red Pill? . Interact with your database . Import the data . Run your first SQL query . Now we&#39;ll go through the SQL query that was used to prepare the data for our report. A query is a piece of SQL code that you use to get the data from the database. You can also use it to do all kinds of manipulations, like: aggregations, custom calculations, filtering, sorting and so on. . One of the reasons that I&#39;m such a huge fan of the SQL is its friendliness. SQL is a declarative language. It means that you don&#39;t need to specify all the low-lewel operations to get the desired result. You just need to describe the final outcome and the database will figure out the rest for you. . TODO: diagram to illustrate the point above . If you have some basic knowledge of English, you may be suprised that a simple SQL query can be nearly understandable to you. . TODO: simple SQL . It almost feels like a pseudocode. The cool thing is that it&#39;s an actual working query. . TODO: explain the meaning of select, from etc. . Let&#39;s see what happens when you run this code. . TODO: run code and show results from db You can now try to execute this query inside the database managament app of your choice. . Visualize your insights .",
            "url": "https://creaitive.studio/sql/2021/03/18/01_intro.html",
            "relUrl": "/sql/2021/03/18/01_intro.html",
            "date": " • Mar 18, 2021"
        }
        
    
  
    
        ,"post2": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://creaitive.studio/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website was created by creaitive.studio - self learning for everyone. .",
          "url": "https://creaitive.studio/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://creaitive.studio/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}