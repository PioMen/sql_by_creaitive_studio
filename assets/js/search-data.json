{
  
    
        "post0": {
            "title": "Copyrights",
            "content": "Below you can find links to all the resources used when working on this book. . item source authors licence . Data on COVID-19 vaccinations shared by Our World in Data | link | link | link | .",
            "url": "https://creaitive.studio/sql/2021/03/18/copyrights.html",
            "relUrl": "/sql/2021/03/18/copyrights.html",
            "date": " • Mar 18, 2021"
        }
        
    
  
    
        ,"post1": {
            "title": "SQL is fun!: Big Query",
            "content": "SQL in action . TODO: use case demo + some intro . Building your first end-to-end project . Now that you saw an example of data project using SQL, you&#39;ll see how to build such project yourself. . Download the data . You can&#39;t do analytics without data. How you actually get it, depends on your project. When working on a business project, you may find the crucial datasets in a database of your company. That&#39;s quite convenient as you don&#39;t have to prepare and upload the data yourself. . Eventually you may stumble upon a limitations of the data at your disposal. Or you may want to work on your personal project, where you need to create your dataset from scratch. In such cases, ability to explore and use publically available datasets can be a very useful skill. There&#39;s no golden rule, but you might want to check sites like Kaggle, this repo, Dataset Search by Google or this subreddit looking for the right data for you. . In our example, we&#39;ll use the data on COVID-19 vaccinations shared by Our World in Data. You can find it in this repo. To download the data, follow the steps: . visit this link, | click on the little Raw button in the upper right corner, | when you see a comma delimited text right-click on top of it and select Save as.. option to save the file on your computer. TODO: screnshoots to bullets above? TODO: you might be wondering if there is a better way to download this file, clone repo? curl? | . Congratulations, you&#39;ve just completed the first step to get your data project up and running! . Install the database . Do you remember the cult movie from 1999 &quot;The Matrix&quot;? There was this very memorable scene where Neo was given a choice between two pills, the red one and the blue one. He had a one in a lifetime opportunity to decide whether he wants to go on living in lie or find out the truth. . There are two remarkable ascpects of this decision. First, one of the options feels to be objectively more &quot;correct&quot;. No one wants his life to be a lie. Secondly, after making this decision, there was no way back, which made it an extremely difficult choice. . At this point of the book, you also need to make a decision. There are many different database solutions and many different SQL flavours. This book covers couple of them, so you need to pick the one that you&#39;ll move on with. Compared to the dilemma that Neo faced, the decision that you are going to make is both easier and more difficult at the same time. . It&#39;s more difficult, because there is no answer which is more &quot;correct&quot; than the others. All solutions discussed in this book are widely used. All of them have advantages and disadvantages and there is no &quot;the right choice&quot;. Fortunately, unlike the Neo, you don&#39;t need to live with this decision for the rest of your life. Quite the opposite! You can start with one tool and later on come back to try another one. . It gets even better than that. There is a standard that describes the principles of the SQL language. It means that even if you learn one implementation of the SQL (e.g. SQLite) and want to switch to another one (e.g. PostgreSQL), you should be able to transfer most of your knowledge. To be clear, it doesn&#39;t mean that each vendor implements the language in an identical way. They try to follow the standard to some degree but there are some differences. Those discrepancie however are reasonable enough to make your knowledge universal most of the time. . sql lite default . TODO: matrix/table showing prons/cons of starting with each of the solutions . Interact with your database . Import the data . Run your first SQL query . Now we&#39;ll go through the SQL query that was used to prepare the data for our report. A query is a piece of SQL code that you use to get the data from the database. You can also use it to do all kinds of manipulations, like: aggregations, custom calculations, filtering, sorting and so on. . One of the reasons that I&#39;m such a huge fan of the SQL is its friendliness. SQL is a declarative language. It means that you don&#39;t need to specify all the low-lewel operations to get the desired result. You just need to describe the final outcome and the database will figure out the rest for you. . TODO: diagram to illustrate the point above . If you have some basic knowledge of English, you may be suprised that a simple SQL query can be nearly understandable to you. . TODO: simple SQL . It almost feels like a pseudocode. The cool thing is that it&#39;s an actual working query. . TODO: explain the meaning of select, from etc. . Let&#39;s see what happens when you run this code. . TODO: run code and show results from db You can now try to execute this query inside the database managament app of your choice. . Visualize your insights .",
            "url": "https://creaitive.studio/sql/2021/03/18/01_intro_big_query.html",
            "relUrl": "/sql/2021/03/18/01_intro_big_query.html",
            "date": " • Mar 18, 2021"
        }
        
    
  
    
        ,"post2": {
            "title": "SQL is fun!",
            "content": "TODO: screenshots OR GIFS for instruction . TODO: schemas, diagram to make it more pleasant to read . SQL in action . TODO: use case demo + some intro . Building your first end-to-end project . Now that you saw an example of data project using SQL, you&#39;ll see how to build such project yourself :rocket: . Download the data . You can&#39;t do analytics without data. How you actually get it, depends on your project. When working on a business project, you may find the crucial datasets in a database of your company. That&#39;s quite convenient as you don&#39;t have to prepare and upload the data yourself. . Eventually you may stumble upon a limitations of the data at your disposal. Or you may want to work on your personal project, where you need to create your dataset from scratch. In such cases, ability to explore and use publically available datasets can be a very useful skill. There&#39;s no golden rule, but you might want to check sites like Kaggle, this repo, Dataset Search by Google or this subreddit looking for the right data for you. . In our example, we&#39;ll use the data on COVID-19 vaccinations shared by Our World in Data. You can find it in this repo. To download the data, follow the steps: . visit this link, | click on the little Raw button in the upper right corner, | when you see a comma delimited text right-click on top of it and select Save as.. option to save the file on your computer. TODO: screnshoots to bullets above? TODO: you might be wondering if there is a better way to download this file, clone repo? curl? | . Congratulations, you&#39;ve just completed the first step to get your data project up and running! . Choose the database . Do you remember the cult movie from 1999 &quot;The Matrix&quot;? There was this very memorable scene where Neo was given a choice between two pills, the red one and the blue one. He had a one in a lifetime opportunity to decide whether he wants to go on living in lie or find out the truth. . There are two remarkable ascpects of this decision. First, one of the options feels to be objectively more &quot;correct&quot;. No one wants his life to be a lie. Secondly, after making this decision, there was no way back, which made it an extremely difficult choice. . At this point of the book, you also need to make a decision. There are many different database solutions and many different SQL flavours. This book covers couple of them, so you need to pick the one that you&#39;ll move on with. Compared to the dilemma that Neo faced, the decision that you are going to make is both easier and more difficult at the same time. . It&#39;s more difficult, because there is no answer which is more &quot;correct&quot; than the others. All solutions discussed in this book are widely used. All of them have advantages and disadvantages and there is no &quot;the right choice&quot;. Fortunately, unlike the Neo, you don&#39;t need to live with this decision for the rest of your life. Quite the opposite! You can start with one tool and later on come back to try another one. . It gets even better than that. There is a standard that describes the principles of the SQL language. It means that even if you learn one implementation of the SQL (e.g. SQLite) and want to switch to another one (e.g. PostgreSQL), you should be able to transfer most of your knowledge. To be clear, it doesn&#39;t mean that each vendor implements the language in an identical way. They try to follow the standard to some degree but there are some differences. Those discrepancie however are reasonable enough to make your knowledge universal most of the time. You will see a note whenever we stamble upon a solution that is very specific to given tool. . Let&#39;s now start working on the database installation. In this book we use SQLite as a default option to show you the process. If you want to see instructions for other databases, visit one of the links: . Big Query (todo: in the backlog): link, | SQLite via Python (todo: in the backlog): link, | PostgreSQL (todo: in the backlog): link. . Note: As for now, the book shows all the steps needed to install the database on Windows 10. If you&#8217;re using other OS, you might want to pick Big Query. Having a browser installed is the only requirement to make it work. | . TODO: matrix/table showing prons/cons of starting with each of the solutions TODO: maybe more info in general about different dbs . Let&#39;s get started! :muscle: . Install the database . SQLite introduction . In this section you&#39;ll see how to install the SQLite database. One of the reasons that SQLite is particurarly good starting point for learning is its simplicity. The entire database is contained in just one file. Setting it up is trivial. It requires hardly any installation and no configuration at all. It&#39;s free, so you can use it to its limits without worring about the costs. . Beware and don&#39;t let the simplicity disguise you. It is a fully reliable database with most of the features that you would expect from the modern SQL database. It&#39;s characteristics make it a perfect choice for: . smartphonoes and other devices, | websites, | data analytics, | and many more. | . Developers of the SQLite boast that it&#39;s likely the most popular database in the entire world. They also strive to keep it reliable until 2050. . Truth be told, SQLite as a bit different than its more traditional brothers - fully fledged relational database management systems (RDBMS), like PostgreSQL, SQL Server or Oracle. It&#39;s not a good choice for every use case. You may decide to choose an alternative, if your project requires: . accessing the database directly from many computers at the same time, | simultaneous modification of the data by many users, | working with very large amounts of data (although it officially can handle up to 281 terabytes, having to keep it in one file is the bottleneck here). | . It also has some unusual behaviours that are distinct from what you will find anywhere else. Everytime we face such behaviour, you will see be informed about it. You can also get familiar with the full list in advance using the official documentation. You can an example of a note below. . Note: SQLite is not a replacement for more traditional solutions. Unlike most databases it doesn&#8217;t come with a dedicated server. That&#8217;s why the use cases for this tool are different from use cases handled by standard database management systems. . At this point you should be aware that there&#39;s no single perfect database solution. Features of SQLite make it an amazing candidate for learning and that&#39;s why we use it as a default technology in this book. With SQLite you&#39;ll get a great ratio of &quot;using the SQL&quot; vs &quot;trying to setup the database&quot;. Finally, if you&#39;re not sure which technology you should start with, remember, you&#39;re not like Neo. You are free to start with one option and switch to something else whenever you want. Most of your knowledge will be easily transferable. . SQLite installation . TODO: here or earlier - database installation is needed to follow the excercises . You&#39;ll now see how to set up your own SQLite database. As mentioned before, this instruction shows how to do it in Windows 10. Let&#39;s get started :rocket: . First you need to visit the SQLite Download Page. You&#39;ll see a list with different sections. Go to &quot;Precompiled Binaries for Windows&quot; and find the link for &quot;bundle of command-line tools&quot;. Click on the link to download the zip file. . | Right click the zip file and uncompress it. SQLite is portable, you don&#39;t need to install it. Actually, you can start using it right now. . | Go to catalog with three files: &quot;sqldiff.exe&quot;, &quot;sqlite3.exe&quot; and &quot;sqlite3_analyzer.exe&quot;. Make the name more concise an readable, like: &quot;sqlite&quot; and move it to the directory where you would like to keep it (e.g. &quot;C: &quot;). . | Open command line tool of your choice, e.g. &quot;Windows PowerShell&quot;. Don&#39;t panic if this is the first time you&#39;re using it. It should be installed on your computer by default. Just follow the instructions and you&#39;ll be fine. In the following points, we&#39;ll use terms shell, command line, terminal, console as synonyms for whatever command line tool that you&#39;re using. . | TODO: maybe hint: you can see names like ..., ..., - these are just different ways of calling ... . Inside your command line tool, you&#39;d like to see the folder where you&#39;ve just moved SQLite files. Use the following command and after replacing your_path with the actual path to your folder hit enter: cd your_path. . Tip: If you don&#8217;t know how to get the path to you folder, you can use a little trick. Right-click on the icon of this folder, go to Properties, select Security tab and copy the full content of Object name:. You can double check if it worked by using ls command inside your shell. After running it (just hit enter), you should see your three files. . | Being inside this folder, you can create your first database. Just type in . sqlite3.exe test.db and hit enter once again. The command should create a database called test.db inside your current folder. Remember that SQLite database is just a file? You can double check if your database was created using ls command or just going to this folder like standard Windows file browser. . Tip: If you don&#8217;t see the file with your database, try typing in .databases in your shell and double check once again. . | You can now close your terminal, as we&#39;ll use a more beginner-friendly way of interacting with the database. Inside your console first hit ctrl + c buttons to close sqlite prompt. Next, close your terminal as any other windows application by clicking :x: button. . | Congratulations, you have just created an SQLite database! You can check the next, optional point or move on to the next section. . | (OPTIONAL) If you work with SQLite prompt frequently, it might be inconvenient for you to go inside specific folder each time you want to run it. You can avoid it using &quot;environment variables&quot; in Windows 10. . | Interact with your database . TODO: now that we can interact with ..., let&#39;s discuss what are the main benefits and ... . Import the data . Run your first SQL query . Now we&#39;ll go through the SQL query that was used to prepare the data for our report. A query is a piece of SQL code that you use to get the data from the database. You can also use it to do all kinds of manipulations, like: aggregations, custom calculations, filtering, sorting and so on. . One of the reasons that I&#39;m such a huge fan of the SQL is its friendliness. SQL is a declarative language. It means that you don&#39;t need to specify all the low-lewel operations to get the desired result. You just need to describe the final outcome and the database will figure out the rest for you. . TODO: diagram to illustrate the point above . If you have some basic knowledge of English, you may be suprised that a simple SQL query can be nearly understandable to you. . TODO: simple SQL . It almost feels like a pseudocode. The cool thing is that it&#39;s an actual working query. . TODO: explain the meaning of select, from etc. . Let&#39;s see what happens when you run this code. . TODO: run code and show results from db You can now try to execute this query inside the database managament app of your choice. . Visualize your insights .",
            "url": "https://creaitive.studio/sql/2021/03/18/01_intro.html",
            "relUrl": "/sql/2021/03/18/01_intro.html",
            "date": " • Mar 18, 2021"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website was created by creaitive.studio - self learning for everyone. .",
          "url": "https://creaitive.studio/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://creaitive.studio/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}